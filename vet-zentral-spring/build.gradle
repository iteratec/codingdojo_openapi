plugins {
    id 'java'
    id "org.openapi.generator"
    id 'org.springframework.boot' version '2.7.2'
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
sourceSets {
    main.java.srcDirs = [
            'src/main/java',
            'generated/src/main/java'
    ]
}
repositories {
    mavenCentral()
}

springBoot {
    mainClass = 'com.iteratec.codingdojo.openapi.zentral.ZentralMain'
}

dependencies {
    compileClasspath("org.openapitools:openapi-generator-gradle-plugin:5.2.1")

    runtimeOnly("com.h2database:h2-mvstore:2.1.210")
    implementation("javax.xml.bind:jaxb-api:2.3.0")

    implementation("org.springframework.boot:spring-boot-starter-webflux:2.7.1")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:2.7.1")
    implementation("org.springframework:spring-web:5.3.21")
    implementation("org.springframework:spring-core:5.3.21")
    implementation("com.mashape.unirest:unirest-java:1.4.9")
    implementation("org.apache.httpcomponents:httpclient:4.5.13")
    implementation("commons-codec:commons-codec:1.15")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.13.2.2")
    implementation("io.jsonwebtoken:jjwt-impl:0.11.2")
    implementation("io.jsonwebtoken:jjwt-api:0.11.2")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.2")
    implementation("io.reactivex:rxjava:1.3.8")
    implementation("io.reactivex:rxjava-reactive-streams:1.2.1")
    implementation("commons-collections:commons-collections:3.2.2")
    implementation("javax.servlet:javax.servlet-api:4.0.1")

    compileOnly("org.projectlombok:lombok:1.18.24")
    annotationProcessor("org.projectlombok:lombok:1.18.24")
    testCompileOnly("org.projectlombok:lombok:1.18.24")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.24")


    testImplementation("org.openapitools.openapidiff:openapi-diff-core:2.0.0-beta.8")

}


tasks.withType(org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    outputs.upToDateWhen { false }
    outputs.cacheIf { false }
}
task validateV1(type: org.openapitools.generator.gradle.plugin.tasks.ValidateTask) {
    inputSpec = "$rootDir/zentral-v1.yaml".toString()
    recommend = true
}

task validateV2(type: org.openapitools.generator.gradle.plugin.tasks.ValidateTask) {
    inputSpec = "$rootDir/zentral-v2.yaml".toString()
    recommend = true
}
task buildV1(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    verbose = false
    generatorName = "spring"
    inputSpec = "$rootDir/zentral-v1.yaml".toString()
    outputDir = "$rootDir/generated".toString()
    apiPackage = "com.iteratec.codingdojo.openapi.zentral.generated.v1.api"
    modelPackage = "com.iteratec.codingdojo.openapi.zentral.generated.v1.model"
    modelNamePrefix = "Dto"
    skipOverwrite = false
    configOptions = [
            delegatePattern: "true",
            serializationLibrary: "jackson",
            dateLibrary: "java8",
            java8: "true",
            sortParamsByRequiredFlag: "true",
            openApiNullable: "false"
    ]
}

compileJava.dependsOn tasks.validateV1, tasks.buildV1


task bootRunDev {
    group = "Application"
    bootRun.configure {
        systemProperty "spring.profiles.active", 'local,swagger'
    }
}
bootRunDev.dependsOn 'build'
bootRunDev.finalizedBy bootRun
